
name: TEST Release

on:
    push:
      tags:
        - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    container: ubuntu:jammy

    strategy:
      matrix:
        include:
          - NAME: name1
            VERSION: 1.0.0
          - NAME: name2
            VERSION: 1.0.0

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and compress database
        if: github.event.release.tag_name == "v${{ matrix.VERSION }}"
        run: |
          apt-get update
          apt-get -y install tar gzip gh ca-certificates git
          mkdir ${{ matrix.NAME }}
          echo 'yo ${{ matrix.NAME }}' > ${{ matrix.NAME }}/test.txt
          tar cvzf ${{ matrix.NAME }}.tar.gz ${{ matrix.NAME }}

      - name: Create release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: 'v${{ matrix.VERSION }}-${{ matrix.NAME }}',
              name: 'Release ${{ matrix.NAME }} ${{ matrix.VERSION }}',
              body: 'Release notes for ${{ matrix.VERSION }}-${{ matrix.NAME }}'
            })

      - name: Upload artifact to release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: 'v${{ matrix.VERSION }}-${{ matrix.NAME }}'
              }).data.id,
              name: '${{ matrix.NAME }}.tar.gz',
              data: fs.readFileSync('${{ matrix.NAME }}.tar.gz')
            })